int iLDRval =500;
int iSpeed = 50;

//Stepper
#include <Stepper.h>
 
int in1Pin = 12;
int in2Pin = 11;
int in3Pin = 10;
int in4Pin = 9;
 
// change this to the number of steps on your motor
#define STEPS 512
 
Stepper motor(STEPS, in1Pin, in2Pin, in3Pin, in4Pin); 
//Stepper end

//Led floor
int Led1 = 5;
int Led2 = 6;
int Led3 = 7;
//end Led floor

//seven sgement
int a = 24;
int b = 26;
int c = 28;
int d = 30;
int e = 32;
int f = 34;
int g = 36;
char chDISPfloor = 'K';
//end of seven sgement

//doors
//Door A
int DoorAPin1 = 38; 
int DoorAPin2 = 40; 
int DoorAPin3 = 42; 
int DoorAPin4 = 44;

//Door B
int DoorBPin1 = 46;
int DoorBPin2 = 48;
int DoorBPin3 = 50;
int DoorBPin4 = 52;

//Door C
int DoorCPin1 = 47;
int DoorCPin2 = 49;
int DoorCPin3 = 51;
int DoorCPin4 = 53;
//doors end

int inFloorA = 2; 
int inFloorB = 3; 
int inFloorC = 4;

//int inFloorA = 5; 
//int inFloorB = 6; 
//int inFloorC = 7;
//
//
//int inCmdFloorA = 2; 
//int inCmdFloorB = 3; 
//int inCmdFloorC = 4;

char chCall = ' ';

char chFloor = 'A';

bool isOnce = false;

int LDRpin1 = A0;
int LDRpin2 = A1;
int LDRpin3 = A2;

int LDR1 = 0;
int LDR2 = 0;
int LDR3 = 0;

//buttons
 int iFloorA =0;
 int iFloorB =0;
 int iFloorC =0;
 int iCmdFloorA =0;
 int iCmdFloorB =0;
 int iCmdFloorC =0;
//end buttons

void setup() 
{
  pinMode(Led1,OUTPUT);
  pinMode(Led2,OUTPUT);
  pinMode(Led3,OUTPUT);
  
  pinMode(LDRpin1, INPUT);
  pinMode(LDRpin2, INPUT);
  pinMode(LDRpin3, INPUT);

  pinMode(inFloorA, INPUT);
  pinMode(inFloorB, INPUT);
  pinMode(inFloorC, INPUT);

//  pinMode(inCmdFloorA, INPUT);
//  pinMode(inCmdFloorB, INPUT);
//  pinMode(inCmdFloorC, INPUT);

  pinMode(in1Pin,OUTPUT);
  pinMode(in2Pin,OUTPUT);
  pinMode(in3Pin,OUTPUT);
  pinMode(in4Pin,OUTPUT);

  //sevensegment
  pinMode(a, OUTPUT);
  pinMode(b, OUTPUT);
  pinMode(c, OUTPUT);
  pinMode(d, OUTPUT);
  pinMode(e, OUTPUT);
  pinMode(f, OUTPUT);
  pinMode(g, OUTPUT);
  //end of seven sgement
  Serial.begin(9600);
  motor.setSpeed(iSpeed);    
}

void loop() 
{
  SevenSegement(chDISPfloor);
  if(isOnce==false)
  {
    isOnce = true;
    Loading();
    Serial.println("Done loading\n");
  }
  SevenSegement(chDISPfloor);  

  while(chCall==' ')
  {
      iFloorA = digitalRead(inFloorA);
      iFloorB = digitalRead(inFloorB);
      iFloorC = digitalRead(inFloorC);
      if(iFloorA==HIGH)
      {
        chCall = 'A';
        digitalWrite(Led1, HIGH);
        digitalWrite(Led2, LOW);
        digitalWrite(Led3, LOW);
      }
       else if(iFloorB==HIGH)
      {
        chCall = 'B';
        digitalWrite(Led2, HIGH);
        digitalWrite(Led1, LOW);
        digitalWrite(Led3, LOW);
      }
      else if(iFloorC==HIGH)
      {
        chCall = 'C';
        digitalWrite(Led3, HIGH);
        digitalWrite(Led1, LOW);
        digitalWrite(Led2, LOW);
      }
  }
  
  while(chCall=='A'||chCall=='B'||chCall=='C')
  {
    SevenSegement(chDISPfloor);
    MotorControl(chCall);
    SevenSegement(chDISPfloor);
    DoorControl(chDISPfloor);
    chCall = ' ';
  }
  
}

//String Calls()
//{
//  String sReturn = "";
//  if(iFloorA==HIGH||iCmdFloorA==HIGH)
//  {
//    sReturn += "A";
//    digitalWrite(Led1, HIGH);
//  }
//  if(iFloorB==HIGH||iCmdFloorA==HIGH)
//  {
//    sReturn += "B";
//    digitalWrite(Led2, HIGH);
//  }
//  if(iFloorC==HIGH||iCmdFloorA==HIGH)
//  {
//    sReturn += "C";
//    digitalWrite(Led3, HIGH);
//  }
//  OffLed();
//  return sReturn ;
//}

void OffLed()
{
  digitalWrite(Led1, LOW);
  digitalWrite(Led2, LOW);
  digitalWrite(Led3, LOW);
}

//char Goto(String _Calls)
//{
//  char chReturn = 'k';
//  if(_Calls.length()>0)
//  {
//    chReturn = _Calls.charAt(0);
//    sCall.remove(0,1);
//  }
//  return chReturn;
//}

void Loading()
{
  int iSteps=20;
  while(LDR('A')<500)
  {
      motor.step(-iSteps);
  }
    chFloor = 'A';
}

void MotorControl(char _chGoTo)
{
  int iSteps=20;
  int iDirection = Movement(chFloor,_chGoTo);
  if(_chGoTo=='A')
  {
    while(LDR(_chGoTo)<iLDRval)
    {
      iSteps = 20*iDirection;
      motor.step(iSteps);
    }
    chFloor = 'A';
  }
  else if(_chGoTo=='B')
  {
    while(LDR(_chGoTo)<iLDRval)
    {
        iSteps = 20*iDirection;
        motor.step(iSteps);
    }
    chFloor = 'B';
  }
  else if(_chGoTo=='C')
  {
    while(LDR(_chGoTo)<iLDRval)
    { 
      iSteps = 20*iDirection;
      motor.step(iSteps);
    }
    chFloor = 'C';
  }
  OffLed();
}

int LDR(char ldr)
{
  int LDR_Val =0;
  if(ldr=='A')
  {
    LDR_Val = analogRead(LDRpin1);
    chDISPfloor = 'A';
  }
  else if(ldr=='B')
  {
    LDR_Val = analogRead(LDRpin2);
    chDISPfloor = 'B';
  }
  else
  {
    LDR_Val = analogRead(LDRpin3);
    chDISPfloor = 'C';
  }
  return LDR_Val;
}

int Movement(char _chFloor,char _cmd)
{
  int iMove =0;
  if(_chFloor=='A')
  {
    if(_cmd=='A')
    {
      iMove = 0;
    }
    else if(_cmd=='B')
    {
      iMove = 1; //down is positive
    }
    else if(_cmd=='C')
    {
      iMove = 1;
    }
  }

  if(_chFloor=='B')
  {
    if(_cmd=='A')
    {
      iMove =-1;
    }
    else if(_cmd=='B')
    {
      iMove = 0; //down is positive
    }
    else if(_cmd=='C')
    {
      iMove = 1;
    }
  }

  if(_chFloor=='C')
  {
    if(_cmd=='A')
    {
      iMove =-1;
    }
    else if(_cmd=='B')
    {
      iMove = -1; //down is positive
    }
    else if(_cmd=='C')
    {
      iMove = 0;
    }
  }

  return iMove;
}

void DoorControl(char chDoor)
{
  if(chDoor == 'A')
  {
    delay(2000);
    Open(DoorAPin1,DoorAPin2,DoorAPin3,DoorAPin4);
    delay(2000);
    Close(DoorAPin1,DoorAPin2,DoorAPin3,DoorAPin4);
    delay(2000);
  }
  else if(chDoor == 'B')
  {
    delay(2000);
    Open(DoorBPin1,DoorBPin2,DoorBPin3,DoorBPin4);
    delay(2000);
    Close(DoorBPin1,DoorBPin2,DoorBPin3,DoorBPin4);
    delay(2000); 
  }
  else if(chDoor == 'C')
  {
    delay(2000);
    Open(DoorCPin1,DoorCPin2,DoorCPin3,DoorCPin4);
    delay(2000);
    Close(DoorCPin1,DoorCPin2,DoorCPin3,DoorCPin4);
    delay(2000); 
  }
}

void Close(int Pin1, int Pin2,int Pin3, int Pin4) 
{ // each floor distance where it works to up
  pinMode(Pin1, OUTPUT); 
  pinMode(Pin2, OUTPUT); 
  pinMode(Pin3, OUTPUT); 
  pinMode(Pin4, OUTPUT); 
  
  for(int b=0; b<400; b++){
  
  digitalWrite(Pin1, LOW);
  digitalWrite(Pin2, LOW);
  digitalWrite(Pin3, LOW);
  digitalWrite(Pin4, HIGH);
  delay(3);
  digitalWrite(Pin1, LOW);
  digitalWrite(Pin2, LOW);
  digitalWrite(Pin3, HIGH);
  digitalWrite(Pin4, LOW);
  delay(3);
  digitalWrite(Pin1, LOW);
  digitalWrite(Pin2, HIGH);
  digitalWrite(Pin3, LOW);
  digitalWrite(Pin4, LOW);
  delay(3);
  digitalWrite(Pin1, HIGH);
  digitalWrite(Pin2, LOW);
  digitalWrite(Pin3, LOW);
  digitalWrite(Pin4, LOW);  
  delay(3);
  }

}

void Open(int Pin1, int Pin2,int Pin3, int Pin4)
{ // each floor distance where it works to down
  pinMode(Pin1, OUTPUT); 
  pinMode(Pin2, OUTPUT); 
  pinMode(Pin3, OUTPUT); 
  pinMode(Pin4, OUTPUT); 

 for(int a=0;a<400;a++){
     
 digitalWrite(Pin1, HIGH); 
 digitalWrite(Pin2, LOW); 
 digitalWrite(Pin3, LOW); 
 digitalWrite(Pin4, LOW); 
 delay(3);
 digitalWrite(Pin1, LOW); 
 digitalWrite(Pin2, HIGH); 
 digitalWrite(Pin3, LOW); 
 digitalWrite(Pin4, LOW); 
 delay(3);
 digitalWrite(Pin1, LOW); 
 digitalWrite(Pin2, LOW); 
 digitalWrite(Pin3, HIGH); 
 digitalWrite(Pin4, LOW); 
 delay(3);
 digitalWrite(Pin1, LOW); 
 digitalWrite(Pin2, LOW); 
 digitalWrite(Pin3, LOW); 
 digitalWrite(Pin4, HIGH); 
 delay(3);
 
 }
}

void SevenSegement(char chLedFloor)
 {
     if (chLedFloor=='A')//floor A
     {
        digitalWrite(a, HIGH);
        digitalWrite(b, HIGH);
        digitalWrite(c, HIGH);
        digitalWrite(d, HIGH);
        digitalWrite(e, LOW);
        digitalWrite(f, LOW);
        digitalWrite(g, HIGH);
  }
  else if (chLedFloor=='B') //floor B
  {
        digitalWrite(a, HIGH);
        digitalWrite(b,HIGH);
        digitalWrite(c, LOW);
        digitalWrite(d, HIGH);
        digitalWrite(e, HIGH);
        digitalWrite(f, LOW);
        digitalWrite(g, HIGH);
  }
  else if (chLedFloor=='C') //floor C
  {
        digitalWrite(a, HIGH);
        digitalWrite(b, LOW);
        digitalWrite(c, HIGH);
        digitalWrite(d, LOW);
        digitalWrite(e, LOW);
        digitalWrite(f, LOW);
        digitalWrite(g, LOW);
  }
  else
  {
    //Loading
        digitalWrite(a, LOW);
        digitalWrite(b, LOW);
        digitalWrite(c, LOW);
        digitalWrite(d, LOW);
        digitalWrite(e, LOW);
        digitalWrite(f, LOW);
        digitalWrite(g, HIGH);
  }
 }
